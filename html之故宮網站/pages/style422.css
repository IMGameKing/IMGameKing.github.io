/* 
CSS動畫可由transition屬性與transform屬性合併設定來完成。
然而，若我們希望製作更複雜的動畫，則可使用CSS的animation屬性來客製化動畫流程。
每個CSS動畫可以設定：
1. animation-name (要用這個＠keyframes當開頭) == 動畫名
2. animation-duration == 進行的時間
3. animation-timing-function == https://developer.mozilla.org/zh-TW/docs/Web/CSS/transition-timing-function
4. animation-delay == 延遲多久才播放
5. animation-iteration-count == 循環幾次
以及animation-direction（方向 指正著播 倒播）, animation-fill-mode（動畫結束後或開始之CSS屬性）, animation-play-state等等屬性。
CSS的animation屬性是個shorthand property，可一次設定上述的多種animation相關屬性。
設定的順序是name, duration, timing-function, delay, iteration-count, direction, fill-mode, play-state。
若有跳過的設定，則會套用CSS的預設值。
例如：animation: cross 1s 3s forwards。
是指，keyframes為cross的動畫，開頭到結束的時間為一秒，延遲三秒，fill-mode為forwards。其餘屬性皆保留為預設值。
 */

div.container {
  width: 500px;
  height: 500px;
  background-color: black;
}

div.box {
  width: 100px;
  height: 100px;
  background-color: aqua;
  /* animation-name: changeColor;
  animation-duration: 2s;
  animation-fill-mode: forwards; */
  position: relative;
  /* animation-iteration-count: infinite;
  animation-direction: alternate; */

  /* animation: name duration timing-function delay iteration-count direction fill-mode; */
  animation: changeColor 2s ease-in 1s infinite alternate forwards;
}

/* 動畫要寫在keyframes裡面 */
@keyframes changeColor {
  from {
    background-color: aqua;
    top: 0px;
    left: 0px;
  }
  to {
    background-color: red;
    top: 400px;
    left: 400px;
  }
}
