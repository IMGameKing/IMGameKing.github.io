/* 使用於第二個頁面 */

h1 {
  color: rgba(183, 26, 183, 0.744);
}
/* 在設計margin border時要注意會不會超過網站的總寬度 */

h2 {
  color: pink;
}

h3 {
  color: #ffffff;
}

a {
  color: rgb(117, 0, 190);
}

/* 
1 bit => 0 or 1 兩種
2 bits => 00 , 01 , 10 , 11 四種
3 bits => 000 , 001 , 010 , 011 , 100 , 101 , 110 , 111 八種
n bits => 2^n種
8 bits => 1byte
 */

/* 
cascading stylesheet:衝突 程式碼是由上而下讀取的，所以後面的顏色才會真正執行覆蓋之前的 
Order Rule(順序規則)是指：
當我們有相同specificity的選擇器時，後寫的選擇器樣式會覆寫前面寫的樣式。
放在比較後面的<link> stylesheet會覆寫放在前面的<link> stylesheet。
*/

/* 
根據W3C的標準，網頁瀏覽器的預設樣式被稱為user agent stylesheet，而網頁瀏覽器連結的stylesheet被稱為user stylesheet。
Priority優先順序為：
1. Inline Styling
2. User Stylesheet(內部順序由Specificity決定)
3. User Agent Stylesheet
4. Inheritance 
*/

/* 
CSS 選擇器有不同的specificities。 例如，選擇id 比選擇class 更specific，所以當一個標籤有兩個 具體程度不同的CSS 選擇器時，
它會取更specific(具體) 的樣式並套用於標籤上面，而不考慮順序前後。
1. id - specificity (1, 0, 0)
2. class - specificity (0, 1, 0)
3. tag - specificity (0, 0, 1)

可以組合，例如用 h1+class就會變成011 
*/

.box {
  width: 500px;
  height: 500px;
  background-color: red;

  border: 10px solid black;
  padding: 20px;
}
/* Block Element 預設 width:100% */

html,
body {
  height: 100%;
}
/* 這個要先設定html及body才能用％去設定出其他block */

.testing {
  background-color: black;
  width: 50%;
  height: 500px;
  color: white;
  overflow: scroll;
}
/* 
CSS Box Model是指，每個block element都被視為一個box，並且box由margin, border, padding以及content所組成。
inline element僅使用Box Model中定義的一部分屬性。

content：顯示內容的區域； 使用 width 和 height 等屬性調整大小。
padding：位於content周圍的區域，在content與border之間； 可使用padding屬性調整大小。
border： 包住content與padding的邊框； 可使用border屬性調整大小。
margin：border外的區域；可 用margin屬性調整大小。
padding、 border以及margin都可再分別設定上下左右的個別屬性。
另外，border可特別設定border-radius屬性。

width 屬性指定元素的寬度。 預設情況下，該屬性定義內容content的寬度。 
但是，如果 box-sizing 設置為 border-box，它會被設定為border區域的寬度。
height 屬性指定元素的高度。預設情況下，該屬性定義content區域的高度。 
但是，如果 box-sizing 設置為 border-box，它會被設定為border區域的高度。
對於block element來說，因為寬度的值與content無關，而是跟parent element一樣寬，往上追溯直到<html>，
而瀏覽器在計算有效寬度時會考慮瀏覽器窗口的打開寬度。
因此，若我們設定block element的width: 50%是可行的，會讓block element的寬度變成其parent element的一半。
然而，除非我們指定特定高度，否則block element的height取決於其content。但瀏覽器根本就不計算內容的高度。
所有的element的高度都是auto。 
當我們要求瀏覽器根據這樣一個預設值來計算百分比高度時，只能得到undefined的結果，
因此，直接設定block element的height: 50%並不能改變其高度。
除非我們先設定<html>, <body>的高度是100%。
另外一種情況是，我們指定特定的parent element高度，這樣child element的%就可以計算出來。
例如， parent element高度為1000px、30vh等等。
另外，在絕大數的情況，我們不會去設定某個元素的高度，所以若有設定高度，則須考慮overflow的情況。
當元素的寬度或高度小於content時，我們可以設定overflow屬性來選擇處理方式：
visible - content不會被修剪，可以呈現在元素框之外。
hidden - 如果需要，內容將被剪裁以適合元素。不提供滾動條。
scroll - 如有必要，內容將被剪裁以適合填充框。 瀏覽器顯示移動軸。
若想要指設定特定方向的overflow屬性，可只選擇overflow-x或overflow-y。
https://developer.mozilla.org/en-US/docs/Web/CSS/overflow 
*/

#image1 {
  width: 30rem;
}
